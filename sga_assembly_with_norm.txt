#!/usr/bin/make -rRsf

###        -usage 'sga_assembly_with_norm.mk RUN=run CPU=8 MEM=15 READ1=/home/lauren/transcriptome/Pero360T.1.fastq.gz READ2=/home/lauren/transcriptome/Pero360T.2.fastq.gz  READ3=/location/of/read3.fastq READ4=/location/of/read4.fastq'
###        -RUN= name of run

MEM=5
CPU=5
RUN=run
READ1=/home/lauren/transcriptome/Pero360T.1.fastq.gz
READ2=/home/lauren/transcriptome/Pero360T.2.fastq.gz 
READ3=mus_musculusREADNAME1.fastq.gz 
READ4=mus_musculusREADNAME1.fastq.gz  

SHELL=/bin/bash -o pipefail
# SGA version
SGA=sga-0.10.12
DWGSIM=dwgsim
REPORT=sga-preqc-report.py

#Just so you know, these are my raw reads input files:
#READ1=/home/lauren/transcriptome/Pero360T.1.fastq.gz 
#READ2=/home/lauren/transcriptome/Pero360T.2.fastq.gz 

#This re-names my samples:
samp1 := p_eremicus
samp2 := mus_musculus

#MAKE DIRECTORIES

#################################SGA####################################

#Below after the all command are the final output files from SGA and normalization and trinity:
#Must be added in order of completion!!!
all:
$(CURDIR)/p_eremicus/p_eremicus_preprocessed.fastq.gz
$(CURDIR)/p_eremicus/mus_musculus_preprocessed.fastq.gz
$(CURDIR)/p_eremicus/p_eremicus_sga.fastq.gz
$(CURDIR)/mus_musculus/mus_musculus_sga.fastq.gz
$(CURDIR)/p_eremicus/p_eremicus_sga_corrected.inter.norm.fastq.gz
$(CURDIR)/mus_musculus/mus_musculus_sga_corrected.inter.norm.fastq.gz
$(CURDIR)/p_eremicus/p_eremicus_sga_with_norm_trinity.fasta
$(CURDIR)/mus_musculus/mus_musculus_sga_with_norm_trinity.fasta


# Pre-process the dataset: recall that NEED gz file form for this step
# intereleaving, removing ends, removing things with low complexity
p_eremicus_preprocessed.fastq.gz: $(CURDIR)/$(samp1)/raw.$(samp1).READNAME_1.fastq.gz 					$(CURDIR)/$(samp1)/raw.$(samp1).READNAME_2.fastq.gz
		$(SGA) preprocess --pe-mode 1 $(CURDIR)/$(samp1)/raw.$(samp1).READNAME_1.fastq.gz $(CURDIR)/$(samp1)/raw.$(samp1).READNAME_2.fastq.gz > $@

mus_musculus_preprocessed.fastq.gz: $(CURDIR)/$(samp2)/raw.$(samp2).READNAME_1.fastq.gz 					$(CURDIR)/$(samp2)/raw.$(samp2).READNAME_2.fastq.gz
		$(SGA) preprocess --pe-mode 1 $(CURDIR)/$(samp2)/raw.$(samp2).READNAME_1.fastq.gz $(CURDIR)/$(samp2)/raw.$(samp2).READNAME_2.fastq.gz > $@		
		
            
# Build the FM-index for each set
%.bwt: %.fastq.gz
		$(SGA) index -a ropebwt -t 8 --no-reverse $<

		
# Make the preqc file for the short read sets
%.preqc: %.bwt %.fastq.gz
		$(SGA) preqc -t 8 $(patsubst %.bwt, %.fastq.gz, $<) > $@

		
# Final PDF reports
main_report.pdf: samp1.preqc samp2.preqc 
		python $(REPORT) $+
		mv preqc_report.pdf $@

		
# SGA correction				

#samp1 := p_eremicus#
$(CURDIR)/$(samp1)/(samp1).sga.fastq:\ #output
$(CURDIR)/$(samp1)/p_eremicus_preprocessed.fastq.gz   #input
	sga correct -k 41 --discard --learn -t 8 -o $(samp1).sga.fastq p_eremicus_preprocessed.fastq.gz

#samp2 := mus_musculus#
$(CURDIR)/$(samp2)/(samp2).sga.fastq:\ #output
$(CURDIR)/$(samp2)/mus_musculus_preprocessed.fastq.gz   #input
	sga correct -k 41 --discard --learn -t 8 -o $(samp2).sga.fastq mus_musculus_preprocessed.fastq.gz
	
	
##########################khmer###############################

C=50
NORM_K=25

#samp1 :=p_eremicus#
$(CURDIR)/$(samp1)/$(samp1).sga_corrected.inter.norm.fastq.gz:\ #output file 
$(CURDIR)/$(samp1)/$(samp1).sga.fastq.gz #input file from sga (interleave these)
	@echo '\n\n'BEGIN NORMALIZATION for $(samp10): `date +'%a %d%b%Y  %H:%M:%S'`
	@echo Settings used: normalize-by-median.py -p -k $(NORM_K) -C $(C) -N 4 -x 15e9
	#interleave-reads.py $^ -o $(CURDIR)/$(samp1)/$(samp1).sga_corrected.inter.fastq
	normalize-by-median.py -p -k $(NORM_K) -C $(C) -N 4 -x 15e9 --out $@ \
	$(CURDIR)/$(samp1)/$(samp1).sga.fastq.gz #input
	gzip $(CURDIR)/$(samp1)/$(samp1).sga_corrected.inter.norm.fastq &
	
#samp2 := mus_musculus#
$(CURDIR)/$(samp2)/$(samp2).sga_corrected.inter.norm.fastq.gz:\ #output file
$(CURDIR)/$(samp2)/$(samp2).sga.fastq.gz #input file from sga
	@echo '\n\n'BEGIN NORMALIZATION for $(samp10): `date +'%a %d%b%Y  %H:%M:%S'`
	@echo Settings used: normalize-by-median.py -p -k $(NORM_K) -C $(C) -N 4 -x 15e9
	#interleave-reads.py $^ -o $(CURDIR)/$(samp2)/$(samp2).sga_corrected.inter.fastq
	normalize-by-median.py -p -k $(NORM_K) -C $(C) -N 4 -x 15e9 --out $@ \
	$(CURDIR)/$(samp2)/$(samp2).sga.fastq.gz #input
	gzip $(CURDIR)/$(samp2)/$(samp2).sga_corrected.inter.norm.fastq &

#######################Trimmomatic/Trinity##########################

#samp1 := p_eremicus#
$(CURDIR)/$(samp1)/(samp1).sga_with_norm_trinity.fasta:\ #output
$(CURDIR)/$(samp1)/$(samp1).sga_corrected.inter.norm.fastq.gz #input from khmer output
	Trinity --seqType fq --JM 50G --trimmomatic \
    --left $<  \
    --right $(word 2,$^) \
    --CPU $(CPU) --output $(samp1).sga_with_norm_trinity.fasta \
    --quality_trimming_params "ILLUMINACLIP:$(CURDIR)/barcodes.fa:2:40:15 LEADING:2 TRAILING:2 MINLEN:25"

#samp2 := mus_musculus#
$(CURDIR)/$(samp2)/(samp2).sga_with_norm_trinity.fasta:\ #output
$(CURDIR)/$(samp2)/$(samp2).sga_corrected.inter.norm.fastq.gz #input from khmer output
	Trinity --seqType fq --JM 50G --trimmomatic \
    --left $<  \
    --right $(word 2,$^) \
    --CPU $(CPU) --output $(samp2).sga_with_norm_trinity.fasta \
    --quality_trimming_params "ILLUMINACLIP:$(CURDIR)/barcodes.fa:2:40:15 LEADING:2 TRAILING:2 MINLEN:25"
    
    
